{"remainingRequest":"C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\src\\App.vue","mtime":1607699352205},{"path":"C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mikhail\\Documents\\WEB\\Web\\Lesson_10\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewoKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <Header :userId=\"userId\" :users=\"users\"/>\n        <Middle :posts=\"posts\" :users=\"users\" :comments=\"comments\"/>\n        <Footer :number_of_posts=\"Object.keys(posts).length\" :number_of_users=\"Object.keys(users).length\"/>\n    </div>\n</template>\n\n<script>\nimport Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\n\nexport default {\n    name: 'App',\n    components: {\n        Footer,\n        Middle,\n        Header\n    },\n    data: function () {\n        return this.$root.$data;\n    },\n    beforeCreate() {\n        this.$root.$on(\"onEnter\", (login, password) => {\n            if (password === \"\") {\n                this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n                return;\n            }\n\n            const users = Object.values(this.users).filter(u => u.login === login);\n            if (users.length === 0) {\n                this.$root.$emit(\"onEnterValidationError\", \"No such user\");\n            } else {\n                this.userId = users[0].id;\n                this.$root.$emit(\"onChangePage\", \"Index\");\n            }\n        });\n\n        this.$root.$on(\"onRegister\", (login, name) => {\n            if (login.length < 3 || login.length > 16) {\n                this.$root.$emit(\"onRegisterValidationError\", \"Login length should be between 3 and 16!\");\n                return;\n            }\n            if (!(/^[a-z]+$/.test(login))) {\n                this.$root.$emit(\"onRegisterValidationError\", \"Login length only small letters!\");\n                return;\n            }\n\n            if (name.length < 1 || name.length > 32) {\n                this.$root.$emit(\"onRegisterValidationError\", \"Name length should be between 3 and 16!\");\n                return;\n            }\n            const users = Object.values(this.users).filter(u => u.login === login);\n            if (users.length !== 0) {\n                this.$root.$emit(\"onRegisterValidationError\", \"Login has already used!\");\n                return;\n            }\n            const id = Math.max(...Object.keys(this.users)) + 1;\n            this.$root.$set(this.users, id, {\n                id, login, name, admin: false\n            });\n            this.$root.$emit(\"onChangePage\", \"Enter\");\n        });\n\n        this.$root.$on(\"onLogout\", () => this.userId = null);\n\n        this.$root.$on(\"onWritePost\", (title, text) => {\n            if (this.userId) {\n                if (!title || title.length < 5) {\n                    this.$root.$emit(\"onWritePostValidationError\", \"Title is too short\");\n                } else if (!text || text.length < 10) {\n                    this.$root.$emit(\"onWritePostValidationError\", \"Text is too short\");\n                } else {\n                    const id = Math.max(...Object.keys(this.posts)) + 1;\n                    this.$root.$set(this.posts, id, {\n                        id, title, text, userId: this.userId\n                    });\n                }\n            } else {\n                this.$root.$emit(\"onWritePostValidationError\", \"No access\");\n            }\n        });\n\n        this.$root.$on(\"onEditPost\", (id, text) => {\n            if (this.userId) {\n                if (!id) {\n                    this.$root.$emit(\"onEditPostValidationError\", \"ID is invalid\");\n                } else if (!text || text.length < 10) {\n                    this.$root.$emit(\"onEditPostValidationError\", \"Text is too short\");\n                } else {\n                    let posts = Object.values(this.posts).filter(p => p.id === parseInt(id));\n                    if (posts.length) {\n                        posts.forEach((item) => {\n                            item.text = text;\n                        });\n                    } else {\n                        this.$root.$emit(\"onEditPostValidationError\", \"No such post\");\n                    }\n                }\n            } else {\n                this.$root.$emit(\"onEditPostValidationError\", \"No access\");\n            }\n        });\n    }\n}\n</script>\n\n<style>\n#app {\n\n}\n</style>\n"]}]}